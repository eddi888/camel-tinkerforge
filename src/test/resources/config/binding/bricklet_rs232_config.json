{
    "category": "Bricklet",
    "description": {
        "de": "Kommuniziert mit RS232 Ger\u00e4ten",
        "en": "Communicates with RS232 devices"
    },
    "author": "Olaf L\u00fcke <olaf@tinkerforge.com>",
    "packets": [
        {
            "elements": [
                [
                    "Message",
                    "char",
                    60,
                    "in"
                ],
                [
                    "Length",
                    "uint8",
                    1,
                    "in"
                ],
                [
                    "Written",
                    "uint8",
                    1,
                    "out"
                ]
            ],
            "name": "Write",
            "doc": [
                "bf",
                {
                    "de": "\nSchreibt einen String aus bis zu 60 Zeichen auf die RS232-Schnittstelle. Der\nString kann aus Bin\u00e4rdaten bestehen, ASCII o.\u00e4. ist nicht notwendig.\n\nDie L\u00e4nge des Strings muss als ein zus\u00e4tzlicher Parameter angegeben werden.\n\nDer R\u00fcckgabewert ist die Anzahl der Zeichen die geschrieben werden konnten.\n\nSiehe :func:`SetConfiguration` f\u00fcr Konfigurationsm\u00f6glichkeiten\nbez\u00fcglich Baudrate, Parit\u00e4t usw.\n",
                    "en": "\nWrites a string of up to 60 characters to the RS232 interface. The string\ncan be binary data, ASCII or similar is not necessary.\n\nThe length of the string has to be given as an additional parameter.\n\nThe return value is the number of bytes that could be written.\n\nSee :func:`SetConfigurations` for configuration possibilities\nregarding baudrate, parity and so on.\n"
                }
            ],
            "since_firmware": [
                1,
                0,
                0
            ],
            "function_id": 1,
            "type": "function"
        },
        {
            "elements": [
                [
                    "Message",
                    "char",
                    60,
                    "out"
                ],
                [
                    "Length",
                    "uint8",
                    1,
                    "out"
                ]
            ],
            "name": "Read",
            "doc": [
                "bf",
                {
                    "de": "\nGibt die aktuell gespeicherte Nachricht zur\u00fcck. Die maximale L\u00e4nge\nbetr\u00e4gt 60. Wenn die L\u00e4nge als 0 gegeben wird, waren keine\nneuen Daten verf\u00fcgbar.\n\nAnstatt mit dieser Funktion zu pollen, ist es auch m\u00f6glich\nCallbacks zu nutzen. Siehe :func:`EnableReadCallback` und\n:func:`ReadCallback`.\n",
                    "en": "\nReturns the currently buffered message. The maximum length\nof message is 60. If the length is given as 0, there was no\nnew data available.\n\nInstead of polling with this function, you can also use\ncallbacks. See :func:`EnableReadCallback` and :func:`ReadCallback`.\n"
                }
            ],
            "since_firmware": [
                1,
                0,
                0
            ],
            "function_id": 2,
            "type": "function"
        },
        {
            "elements": [],
            "name": "Enable Read Callback",
            "doc": [
                "ccf",
                {
                    "de": "\nAktiviert den :func:`ReadCallback`.\n\nIm Startzustand ist der Callback deaktiviert\n",
                    "en": "\nEnables the :func:`ReadCallback`.\n\nBy default the callback is disabled.\n"
                }
            ],
            "since_firmware": [
                1,
                0,
                0
            ],
            "function_id": 3,
            "type": "function"
        },
        {
            "elements": [],
            "name": "Disable Read Callback",
            "doc": [
                "ccf",
                {
                    "de": "\nDeaktiviert den :func:`ReadCallback`.\n\nIm Startzustand ist der Callback deaktiviert\n",
                    "en": "\nDisables the :func:`ReadCallback`.\n\nBy default the callback is disabled.\n"
                }
            ],
            "since_firmware": [
                1,
                0,
                0
            ],
            "function_id": 4,
            "type": "function"
        },
        {
            "elements": [
                [
                    "Enabled",
                    "bool",
                    1,
                    "out"
                ]
            ],
            "name": "Is Read Callback Enabled",
            "doc": [
                "ccf",
                {
                    "de": "\nGibt *true* zur\u00fcck falls :func:`ReadCallback` aktiviert ist, \n*false* sonst.\n",
                    "en": "\nReturns *true* if the :func:`ReadCallback` is enabled,\n*false* otherwise.\n"
                }
            ],
            "since_firmware": [
                1,
                0,
                0
            ],
            "function_id": 5,
            "type": "function"
        },
        {
            "elements": [
                [
                    "Baudrate",
                    "uint8",
                    1,
                    "in",
                    [
                        "Baudrate",
                        [
                            [
                                "300",
                                0
                            ],
                            [
                                "600",
                                1
                            ],
                            [
                                "1200",
                                2
                            ],
                            [
                                "2400",
                                3
                            ],
                            [
                                "4800",
                                4
                            ],
                            [
                                "9600",
                                5
                            ],
                            [
                                "14400",
                                6
                            ],
                            [
                                "19200",
                                7
                            ],
                            [
                                "28800",
                                8
                            ],
                            [
                                "38400",
                                9
                            ],
                            [
                                "57600",
                                10
                            ],
                            [
                                "115200",
                                11
                            ],
                            [
                                "230400",
                                12
                            ]
                        ]
                    ]
                ],
                [
                    "Parity",
                    "uint8",
                    1,
                    "in",
                    [
                        "Parity",
                        [
                            [
                                "None",
                                0
                            ],
                            [
                                "Odd",
                                1
                            ],
                            [
                                "Even",
                                2
                            ],
                            [
                                "Forced Parity 1",
                                3
                            ],
                            [
                                "Forced Parity 0",
                                4
                            ]
                        ]
                    ]
                ],
                [
                    "Stopbits",
                    "uint8",
                    1,
                    "in",
                    [
                        "Stopbits",
                        [
                            [
                                "1",
                                1
                            ],
                            [
                                "2",
                                2
                            ]
                        ]
                    ]
                ],
                [
                    "Wordlength",
                    "uint8",
                    1,
                    "in",
                    [
                        "Wordlength",
                        [
                            [
                                "5",
                                5
                            ],
                            [
                                "6",
                                6
                            ],
                            [
                                "7",
                                7
                            ],
                            [
                                "8",
                                8
                            ]
                        ]
                    ]
                ],
                [
                    "Hardware Flowcontrol",
                    "uint8",
                    1,
                    "in",
                    [
                        "Hardware Flowcontrol",
                        [
                            [
                                "Off",
                                0
                            ],
                            [
                                "On",
                                1
                            ]
                        ]
                    ]
                ],
                [
                    "Software Flowcontrol",
                    "uint8",
                    1,
                    "in",
                    [
                        "Software Flowcontrol",
                        [
                            [
                                "Off",
                                0
                            ],
                            [
                                "On",
                                1
                            ]
                        ]
                    ]
                ]
            ],
            "name": "Set Configuration",
            "doc": [
                "bf",
                {
                    "de": "\nSetzt die Konfiguration f\u00fcr die RS232-Kommunikation.\nVerf\u00fcgbare Optionen sind:\n\n* Baudrate zwischen 300 und 230400 Baud.\n* Parit\u00e4t von None, Odd, Even und Forced Parity.\n* Stop Bits von 1 oder 2.\n* Wortl\u00e4nge zwischen 5 und 8.\n* Hard-/Software Flow Control kann je an oder aus sein.\n\nDer Standard ist: 115200 Baud, Parit\u00e4t None, 1 Stop Bits, Wortl\u00e4nge 8, Hard-/Software Flow Control aus.\n",
                    "en": "\nSets the configuration for the RS232 communication. Available options:\n\n* Baudrate between 300 and 230400 baud.\n* Parity of none, odd, even or forced parity.\n* Stopbits can be 1 or 2.\n* Word length of 5 to 8.\n* Hard-/Software flow control can each be on or off.\n\nThe default is: 115200 baud, parity none, 1 stop bit, word length 8, hard-/software flow control off.\n"
                }
            ],
            "since_firmware": [
                1,
                0,
                0
            ],
            "function_id": 6,
            "type": "function"
        },
        {
            "elements": [
                [
                    "Baudrate",
                    "uint8",
                    1,
                    "out",
                    [
                        "Baudrate",
                        [
                            [
                                "300",
                                0
                            ],
                            [
                                "600",
                                1
                            ],
                            [
                                "1200",
                                2
                            ],
                            [
                                "2400",
                                3
                            ],
                            [
                                "4800",
                                4
                            ],
                            [
                                "9600",
                                5
                            ],
                            [
                                "14400",
                                6
                            ],
                            [
                                "19200",
                                7
                            ],
                            [
                                "28800",
                                8
                            ],
                            [
                                "38400",
                                9
                            ],
                            [
                                "57600",
                                10
                            ],
                            [
                                "115200",
                                11
                            ],
                            [
                                "230400",
                                12
                            ]
                        ]
                    ]
                ],
                [
                    "Parity",
                    "uint8",
                    1,
                    "out",
                    [
                        "Parity",
                        [
                            [
                                "None",
                                0
                            ],
                            [
                                "Odd",
                                1
                            ],
                            [
                                "Even",
                                2
                            ],
                            [
                                "Forced Parity 1",
                                3
                            ],
                            [
                                "Forced Parity 0",
                                4
                            ]
                        ]
                    ]
                ],
                [
                    "Stopbits",
                    "uint8",
                    1,
                    "out",
                    [
                        "Stopbits",
                        [
                            [
                                "1",
                                1
                            ],
                            [
                                "2",
                                2
                            ]
                        ]
                    ]
                ],
                [
                    "Wordlength",
                    "uint8",
                    1,
                    "out",
                    [
                        "Wordlength",
                        [
                            [
                                "5",
                                5
                            ],
                            [
                                "6",
                                6
                            ],
                            [
                                "7",
                                7
                            ],
                            [
                                "8",
                                8
                            ]
                        ]
                    ]
                ],
                [
                    "Hardware Flowcontrol",
                    "uint8",
                    1,
                    "out",
                    [
                        "Hardware Flowcontrol",
                        [
                            [
                                "Off",
                                0
                            ],
                            [
                                "On",
                                1
                            ]
                        ]
                    ]
                ],
                [
                    "Software Flowcontrol",
                    "uint8",
                    1,
                    "out",
                    [
                        "Software Flowcontrol",
                        [
                            [
                                "Off",
                                0
                            ],
                            [
                                "On",
                                1
                            ]
                        ]
                    ]
                ]
            ],
            "name": "Get Configuration",
            "doc": [
                "bf",
                {
                    "de": "\nGibt die Konfiguration zur\u00fcck, wie von :func:`SetConfiguration` gesetzt.\n",
                    "en": "\nReturns the configuration as set by :func:`SetConfiguration`.\n"
                }
            ],
            "since_firmware": [
                1,
                0,
                0
            ],
            "function_id": 7,
            "type": "function"
        },
        {
            "elements": [
                [
                    "Message",
                    "char",
                    60,
                    "out"
                ],
                [
                    "Length",
                    "uint8",
                    1,
                    "out"
                ]
            ],
            "name": "Read Callback",
            "doc": [
                "c",
                {
                    "de": "\nDieser Callback wird aufgerufen wenn neue Daten zur Verf\u00fcgung stehen.\nDie Nachricht hat eine Maximalgr\u00f6\u00dfe von 60 Zeichen. Die L\u00e4nge\nder Nachricht wird zus\u00e4tzlich \u00fcbergeben.\n\nDieser Callback kann durch :func:`EnableReadCallback` aktiviert werden.\n",
                    "en": "\nThis callback is called if new data is available. The message has\na maximum size of 60 characters. The actual length of the message\nis given in addition.\n\nTo enable this callback, use :func:`EnableReadCallback`.\n"
                }
            ],
            "since_firmware": [
                1,
                0,
                0
            ],
            "function_id": 8,
            "type": "callback"
        },
        {
            "elements": [
                [
                    "Error",
                    "uint8",
                    1,
                    "out",
                    [
                        "Error",
                        [
                            [
                                "Overrun",
                                1
                            ],
                            [
                                "Parity",
                                2
                            ],
                            [
                                "Framing",
                                4
                            ]
                        ]
                    ]
                ]
            ],
            "name": "Error Callback",
            "doc": [
                "c",
                {
                    "de": "\nDieser Callback wird aufgerufen wenn ein Fehler auftritt.\nM\u00f6gliche Fehler sind Overrun-, Parity- oder Framing-Fehler.\n",
                    "en": "\nThis callback is called if an error occurs. \nPossible errors are overrun, parity or framing error.\n"
                }
            ],
            "since_firmware": [
                2,
                0,
                1
            ],
            "function_id": 9,
            "type": "callback"
        },
        {
            "elements": [
                [
                    "Break Time",
                    "uint16",
                    1,
                    "in"
                ]
            ],
            "name": "Set Break Condition",
            "doc": [
                "bf",
                {
                    "de": "\nSetzt eine Break Condition (die TX-Ausgabe wird fest of logisch 0 gezwungen).\nDer Parameter setzt die Haltezeit der Break Condition (in ms).\n",
                    "en": "\nSets a break condition (the TX output is forced to a logic 0 state). \nThe parameter sets the hold-time of the break condition (in ms). \n"
                }
            ],
            "since_firmware": [
                2,
                0,
                2
            ],
            "function_id": 10,
            "type": "function"
        },
        {
            "elements": [
                [
                    "API Version",
                    "uint8",
                    3,
                    "out"
                ]
            ],
            "name": "Get API Version",
            "doc": [
                "af",
                {
                    "de": "\nGibt die Version der API Definition (Major, Minor, Revision) zur\u00fcck, die diese\nAPI Bindings implementieren. Dies ist weder die Release-Version dieser API\nBindings noch gibt es in irgendeiner Weise Auskunft \u00fcber den oder das\nrepr\u00e4sentierte(n) Brick oder Bricklet.\n",
                    "en": "\nReturns the version of the API definition (major, minor, revision) implemented\nby this API bindings. This is neither the release version of this API bindings\nnor does it tell you anything about the represented Brick or Bricklet.\n"
                }
            ],
            "is_virtual": true,
            "since_firmware": null,
            "function_id": -1,
            "type": "function"
        },
        {
            "elements": [
                [
                    "Function Id",
                    "uint8",
                    1,
                    "in"
                ],
                [
                    "Response Expected",
                    "bool",
                    1,
                    "out"
                ]
            ],
            "name": "Get Response Expected",
            "doc": [
                "af",
                {
                    "de": "\nGibt das Response-Expected-Flag f\u00fcr die Funktion mit der angegebenen Funktions\nIDs zur\u00fcck. Es ist *true* falls f\u00fcr die Funktion beim Aufruf eine Antwort\nerwartet wird, *false* andernfalls.\n\nF\u00fcr Getter-Funktionen ist diese Flag immer gesetzt und kann nicht entfernt\nwerden, da diese Funktionen immer eine Antwort senden. F\u00fcr\nKonfigurationsfunktionen f\u00fcr Callbacks ist es standardm\u00e4\u00dfig gesetzt, kann aber\nentfernt werden mittels :func:`SetResponseExpected`. F\u00fcr Setter-Funktionen ist\nes standardm\u00e4\u00dfig nicht gesetzt, kann aber gesetzt werden.\n\nWenn das Response-Expected-Flag f\u00fcr eine Setter-Funktion gesetzt ist, k\u00f6nnen\nTimeouts und andere Fehlerf\u00e4lle auch f\u00fcr Aufrufe dieser Setter-Funktion\ndetektiert werden. Das Ger\u00e4t sendet dann eine Antwort extra f\u00fcr diesen Zweck.\nWenn das Flag f\u00fcr eine Setter-Funktion nicht gesetzt ist, dann wird keine\nAntwort vom Ger\u00e4t gesendet und Fehler werden stillschweigend ignoriert, da sie\nnicht detektiert werden k\u00f6nnen.\n\nSiehe :func:`SetResponseExpected`\nf\u00fcr die Liste der verf\u00fcgbaren Funktions ID :word:`constants` f\u00fcr diese Funktion.\n",
                    "en": "\nReturns the response expected flag for the function specified by the function\nID parameter. It is *true* if the function is expected to send a response,\n*false* otherwise.\n\nFor getter functions this is enabled by default and cannot be disabled,\nbecause those functions will always send a response. For callback configuration\nfunctions it is enabled by default too, but can be disabled by\n:func:`SetResponseExpected`. For setter functions it is disabled by default\nand can be enabled.\n\nEnabling the response expected flag for a setter function allows to detect\ntimeouts and other error conditions calls of this setter as well. The\ndevice will then send a response for this purpose. If this flag is disabled for\na setter function then no response is send and errors are silently ignored,\nbecause they cannot be detected.\n\nSee :func:`SetResponseExpected`\nfor the list of function ID :word:`constants` available for this function.\n"
                }
            ],
            "is_virtual": true,
            "since_firmware": null,
            "function_id": -1,
            "type": "function"
        },
        {
            "elements": [
                [
                    "Function Id",
                    "uint8",
                    1,
                    "in"
                ],
                [
                    "Response Expected",
                    "bool",
                    1,
                    "in"
                ]
            ],
            "name": "Set Response Expected",
            "doc": [
                "af",
                {
                    "de": "\n\u00c4ndert das Response-Expected-Flag f\u00fcr die Funktion mit der angegebenen Funktion\nIDs. Diese Flag kann nur f\u00fcr Setter-Funktionen (Standardwert: *false*) und\nKonfigurationsfunktionen f\u00fcr Callbacks (Standardwert: *true*) ge\u00e4ndert werden.\nF\u00fcr Getter-Funktionen ist das Flag immer gesetzt und f\u00fcr Callbacks niemals.\n\nWenn das Response-Expected-Flag f\u00fcr eine Setter-Funktion gesetzt ist, k\u00f6nnen\nTimeouts und andere Fehlerf\u00e4lle auch f\u00fcr Aufrufe dieser Setter-Funktion\ndetektiert werden. Das Ger\u00e4t sendet dann eine Antwort extra f\u00fcr diesen Zweck.\nWenn das Flag f\u00fcr eine Setter-Funktion nicht gesetzt ist, dann wird keine\nAntwort vom Ger\u00e4t gesendet und Fehler werden stillschweigend ignoriert, da sie\nnicht detektiert werden k\u00f6nnen.\n",
                    "en": "\nChanges the response expected flag of the function specified by the\nfunction ID parameter. This flag can only be changed for setter (default value:\n*false*) and callback configuration functions (default value: *true*). For\ngetter functions it is always enabled and callbacks it is always disabled.\n\nEnabling the response expected flag for a setter function allows to detect\ntimeouts and other error conditions calls of this setter as well. The\ndevice will then send a response for this purpose. If this flag is disabled for\na setter function then no response is send and errors are silently ignored,\nbecause they cannot be detected.\n"
                }
            ],
            "is_virtual": true,
            "since_firmware": null,
            "function_id": -1,
            "type": "function"
        },
        {
            "elements": [
                [
                    "Response Expected",
                    "bool",
                    1,
                    "in"
                ]
            ],
            "name": "Set Response Expected All",
            "doc": [
                "af",
                {
                    "de": "\n\u00c4ndert das Response-Expected-Flag f\u00fcr alle Setter-Funktionen und\nKonfigurationsfunktionen f\u00fcr Callbacks diese Ger\u00e4tes.\n",
                    "en": "\nChanges the response expected flag for all setter and callback configuration\nfunctions of this device at once.\n"
                }
            ],
            "is_virtual": true,
            "since_firmware": null,
            "function_id": -1,
            "type": "function"
        },
        {
            "elements": [
                [
                    "Uid",
                    "string",
                    8,
                    "out"
                ],
                [
                    "Connected Uid",
                    "string",
                    8,
                    "out"
                ],
                [
                    "Position",
                    "char",
                    1,
                    "out"
                ],
                [
                    "Hardware Version",
                    "uint8",
                    3,
                    "out"
                ],
                [
                    "Firmware Version",
                    "uint8",
                    3,
                    "out"
                ],
                [
                    "Device Identifier",
                    "uint16",
                    1,
                    "out"
                ]
            ],
            "name": "Get Identity",
            "doc": [
                "af",
                {
                    "de": "\nGibt die UID, die UID zu der das Bricklet verbunden ist, die\nPosition, die Hard- und Firmware Version sowie den Device Identifier\nzur\u00fcck.\n\nDie Position kann 'a', 'b', 'c' oder 'd' sein.\n\nEine Liste der Device Identifier Werte ist :ref:`hier <device_identifier>` zu\nfinden. |device_identifier_constant|\n",
                    "en": "\nReturns the UID, the UID where the Bricklet is connected to, \nthe position, the hardware and firmware version as well as the\ndevice identifier.\n\nThe position can be 'a', 'b', 'c' or 'd'.\n\nThe device identifier numbers can be found :ref:`here <device_identifier>`.\n|device_identifier_constant|\n"
                }
            ],
            "prototype_in_device": true,
            "since_firmware": [
                2,
                0,
                0
            ],
            "function_id": 255,
            "type": "function"
        }
    ],
    "device_identifier": 254,
    "released": true,
    "examples": [
        {
            "functions": [
                [
                    "setter",
                    "Enable Read Callback",
                    [],
                    "Enable read callback",
                    null
                ]
            ],
            "name": "Loopback",
            "incomplete": true
        }
    ],
    "common_included": true,
    "manufacturer": "Tinkerforge",
    "api_version": [
        2,
        0,
        2
    ],
    "name": [
        "RS232",
        "RS232",
        "RS232 Bricklet"
    ]
}