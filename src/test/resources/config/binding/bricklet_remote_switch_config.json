{
    "category": "Bricklet",
    "description": "Device that controls mains switches remotely",
    "author": "Olaf L\u00fcke <olaf@tinkerforge.com>",
    "packets": [
        {
            "elements": [
                [
                    "house_code",
                    "uint8",
                    1,
                    "in"
                ],
                [
                    "receiver_code",
                    "uint8",
                    1,
                    "in"
                ],
                [
                    "switch_to",
                    "uint8",
                    1,
                    "in",
                    [
                        "SwitchTo",
                        "switch_to",
                        [
                            [
                                "Off",
                                "off",
                                0
                            ],
                            [
                                "On",
                                "on",
                                1
                            ]
                        ]
                    ]
                ]
            ],
            "name": [
                "SwitchSocket",
                "switch_socket"
            ],
            "doc": [
                "bf",
                {
                    "de": "\nDiese Funktion ist veraltet und wurde durch :func:`SwitchSocketA` ersetzt.\n",
                    "en": "\nThis function is deprecated, use :func:`SwitchSocketA` instead.\n"
                }
            ],
            "since_firmware": [
                1,
                0,
                0
            ],
            "function_id": 1,
            "type": "function"
        },
        {
            "elements": [
                [
                    "state",
                    "uint8",
                    1,
                    "out",
                    [
                        "SwitchingState",
                        "switching_state",
                        [
                            [
                                "Ready",
                                "ready",
                                0
                            ],
                            [
                                "Busy",
                                "busy",
                                1
                            ]
                        ]
                    ]
                ]
            ],
            "name": [
                "GetSwitchingState",
                "get_switching_state"
            ],
            "doc": [
                "bf",
                {
                    "de": "\nGibt den aktuellen Zustand des Schaltens zur\u00fcck. Wenn der aktuell Zustand\nbusy (besch\u00e4ftigt) ist, sendet das Bricklet gerade einen Code um eine Steckdose\nzu schalten. Weitere Aufrufe von :func:`SwitchSocket` werden ignoriert bis\nder Zustand auf ready (fertig) wechselt.\n\nDie L\u00e4nge des Schaltvorgangs ist abh\u00e4ngig von der Anzahl der Wiederholungen,\nsiehe :func:`SetRepeats`.\n",
                    "en": "\nReturns the current switching state. If the current state is busy, the\nBricklet is currently sending a code to switch a socket. It will not\naccept any calls of :func:`SwitchSocket` until the state changes to ready.\n\nHow long the switching takes is dependent on the number of repeats, see\n:func:`SetRepeats`.\n"
                }
            ],
            "since_firmware": [
                1,
                0,
                0
            ],
            "function_id": 2,
            "type": "function"
        },
        {
            "elements": [],
            "name": [
                "SwitchingDone",
                "switching_done"
            ],
            "doc": [
                "c",
                {
                    "de": "\nDieser Callback wird aufgerufen wenn der Schaltzustand\nvon busy auf ready wechselt, siehe :func:`GetSwitchingState`.\n",
                    "en": "\nThis callback is called whenever the switching state changes\nfrom busy to ready, see :func:`GetSwitchingState`.\n"
                }
            ],
            "since_firmware": [
                1,
                0,
                0
            ],
            "function_id": 3,
            "type": "callback"
        },
        {
            "elements": [
                [
                    "repeats",
                    "uint8",
                    1,
                    "in"
                ]
            ],
            "name": [
                "SetRepeats",
                "set_repeats"
            ],
            "doc": [
                "af",
                {
                    "de": "\nSetzt die Anzahl der Wiederholungen die verwendet werden um einen Code zu\nsenden wenn eine der :func:`SwitchSocket` Funktionen aufgerufen wird. Die\nWiederholungen korrespondieren zu der Zeit die eine Taste auf der Fernbedienung\ngedr\u00fcckt wird.\n\nEinige Dimmer werden \u00fcber die L\u00e4nge des Tastendrucks kontrolliert, dies kann\nsimuliert werden indem man die Anzahl der Wiederholungen inkrementiert.\n\nDer Standardwert ist 5.\n",
                    "en": "\nSets the number of times the code is send when of the :func:`SwitchSocket`\nfunctions is called. The repeats basically correspond to the amount of time\nthat a button of the remote is pressed.\n\nSome dimmers are controlled by the length of a button pressed,\nthis can be simulated by increasing the repeats.\n\nThe default value is 5.\n"
                }
            ],
            "since_firmware": [
                1,
                0,
                0
            ],
            "function_id": 4,
            "type": "function"
        },
        {
            "elements": [
                [
                    "repeats",
                    "uint8",
                    1,
                    "out"
                ]
            ],
            "name": [
                "GetRepeats",
                "get_repeats"
            ],
            "doc": [
                "af",
                {
                    "de": "\nGibt die Anzahl der Wiederholungen zur\u00fcck, wie von :func:`SetRepeats` gesetzt.\n",
                    "en": "\nReturns the number of repeats as set by :func:`SetRepeats`. \n"
                }
            ],
            "since_firmware": [
                1,
                0,
                0
            ],
            "function_id": 5,
            "type": "function"
        },
        {
            "elements": [
                [
                    "house_code",
                    "uint8",
                    1,
                    "in"
                ],
                [
                    "receiver_code",
                    "uint8",
                    1,
                    "in"
                ],
                [
                    "switch_to",
                    "uint8",
                    1,
                    "in",
                    [
                        "SwitchTo",
                        "switch_to",
                        [
                            [
                                "Off",
                                "off",
                                0
                            ],
                            [
                                "On",
                                "on",
                                1
                            ]
                        ]
                    ]
                ]
            ],
            "name": [
                "SwitchSocketA",
                "switch_socket_a"
            ],
            "doc": [
                "bf",
                {
                    "de": "\nUm eine Typ A Steckdose zu schalten muss der Housecode, Receivercode sowie\nder Zustand (an oder aus) zu dem geschaltet werden soll \u00fcbergeben werden.\n\nDer House- und Receivercode hat einen Wertebereich von 0 bis 31 (5Bit).\n\nEine detaillierte Beschreibung wie man den House- und Receivercode herausfinden\nkann gibt es :ref:`hier <remote_switch_bricklet_type_a_house_and_receiver_code>`.\n",
                    "en": "\nTo switch a type A socket you have to give the house code, receiver code and the\nstate (on or off) you want to switch to.\n\nThe house code and receiver code have a range of 0 to 31 (5bit).\n\nA detailed description on how you can figure out the house and receiver code\ncan be found :ref:`here <remote_switch_bricklet_type_a_house_and_receiver_code>`.\n"
                }
            ],
            "since_firmware": [
                2,
                0,
                1
            ],
            "function_id": 6,
            "type": "function"
        },
        {
            "elements": [
                [
                    "address",
                    "uint32",
                    1,
                    "in"
                ],
                [
                    "unit",
                    "uint8",
                    1,
                    "in"
                ],
                [
                    "switch_to",
                    "uint8",
                    1,
                    "in",
                    [
                        "SwitchTo",
                        "switch_to",
                        [
                            [
                                "Off",
                                "off",
                                0
                            ],
                            [
                                "On",
                                "on",
                                1
                            ]
                        ]
                    ]
                ]
            ],
            "name": [
                "SwitchSocketB",
                "switch_socket_b"
            ],
            "doc": [
                "bf",
                {
                    "de": "\nUm eine Typ B Steckdose zu schalten muss die Adresse und Unit sowie\nder Zustand (an oder aus) zu dem geschaltet werden soll \u00fcbergeben werden.\n\nDie Adresse hat einen Wertebereich von 0 bis 67108863 (26Bit) und die Unit hat\neinen Wertebereich von 0 bis 15 (4Bit). Um alle Ger\u00e4te mit der selben Adresse\nzu schalten kann die Unit auf 255 gesetzt werden.\n\nEine detaillierte Beschreibung wie man Adresse und Unit einer Steckdose anlernen\nkann gibt es :ref:`hier <remote_switch_bricklet_type_b_address_and_unit>`.\n",
                    "en": "\nTo switch a type B socket you have to give the address, unit and the state\n(on or off) you want to switch to.\n\nThe address has a range of 0 to 67108863 (26bit) and the unit has a range\nof 0 to 15 (4bit). To switch all devices with the same address use 255 for\nthe unit.\n\nA detailed description on how you can teach a socket the address and unit can\nbe found :ref:`here <remote_switch_bricklet_type_b_address_and_unit>`.\n"
                }
            ],
            "since_firmware": [
                2,
                0,
                1
            ],
            "function_id": 7,
            "type": "function"
        },
        {
            "elements": [
                [
                    "address",
                    "uint32",
                    1,
                    "in"
                ],
                [
                    "unit",
                    "uint8",
                    1,
                    "in"
                ],
                [
                    "dim_value",
                    "uint8",
                    1,
                    "in"
                ]
            ],
            "name": [
                "DimSocketB",
                "dim_socket_b"
            ],
            "doc": [
                "bf",
                {
                    "de": "\nUm eine Typ B Dimmer zu steuern muss die Adresse und Unit sowie\nder Dimmwert auf der Dimmer gesetzt werden soll \u00fcbergeben werden.\n\nDie Adresse hat einen Wertebereich von 0 bis 67108863 (26Bit), die Unit und\nder Dimmwert haben einen Wertebereich von 0 bis 15 (4Bit).\n\nEine detaillierte Beschreibung wie man Adresse und Unit einem Dimmer anlernen\nkann gibt es :ref:`hier <remote_switch_bricklet_type_b_address_and_unit>`.\n",
                    "en": "\nTo control a type B dimmer you have to give the address, unit and the\ndim value you want to set the dimmer to.\n\nThe address has a range of 0 to 67108863 (26bit), the unit and the dim value\nhas a range of 0 to 15 (4bit).\n\nA detailed description on how you can teach a dimmer the address and unit can\nbe found :ref:`here <remote_switch_bricklet_type_b_address_and_unit>`.\n"
                }
            ],
            "since_firmware": [
                2,
                0,
                1
            ],
            "function_id": 8,
            "type": "function"
        },
        {
            "elements": [
                [
                    "system_code",
                    "char",
                    1,
                    "in"
                ],
                [
                    "device_code",
                    "uint8",
                    1,
                    "in"
                ],
                [
                    "switch_to",
                    "uint8",
                    1,
                    "in",
                    [
                        "SwitchTo",
                        "switch_to",
                        [
                            [
                                "Off",
                                "off",
                                0
                            ],
                            [
                                "On",
                                "on",
                                1
                            ]
                        ]
                    ]
                ]
            ],
            "name": [
                "SwitchSocketC",
                "switch_socket_c"
            ],
            "doc": [
                "bf",
                {
                    "de": "\nUm eine Typ A Steckdose zu schalten muss der Systemcode, Ger\u00e4tecode sowie\nder Zustand (an oder aus) zu dem geschaltet werden soll \u00fcbergeben werden.\n\nDer Systemcode hat einen Wertebereich von 'A' bis 'P' (4Bit) und der Ger\u00e4tecode\nhat einen Wertebereich von 1 bis 16 (4Bit).\n\nEine detaillierte Beschreibung wie man den System- und Ger\u00e4tecode herausfinden\nkann gibt es :ref:`hier <remote_switch_bricklet_type_c_system_and_device_code>`.\n",
                    "en": "\nTo switch a type C socket you have to give the system code, device code and the\nstate (on or off) you want to switch to.\n\nThe system code has a range of 'A' to 'P' (4bit) and the device code has a\nrange of 1 to 16 (4bit).\n\nA detailed description on how you can figure out the system and device code\ncan be found :ref:`here <remote_switch_bricklet_type_c_system_and_device_code>`.\n"
                }
            ],
            "since_firmware": [
                2,
                0,
                1
            ],
            "function_id": 9,
            "type": "function"
        },
        {
            "elements": [
                [
                    "api_version",
                    "uint8",
                    3,
                    "out"
                ]
            ],
            "name": [
                "GetAPIVersion",
                "get_api_version"
            ],
            "doc": [
                "af",
                {
                    "de": "\nGibt die Version der API Definition (Major, Minor, Revision) zur\u00fcck, die diese\nAPI Bindings implementieren. Dies ist werder die Release-Version dieser API\nBindings noch gibt es in irgendeiner Weise Auskunft \u00fcber den oder das\nrepr\u00e4sentierte(n) Brick oder Bricklet.\n",
                    "en": "\nReturns the version of the API definition (major, minor, revision) implemented\nby this API bindings. This is neither the release version of this API bindings\nnor does it tell you anything about the represented Brick or Bricklet.\n"
                }
            ],
            "is_virtual": true,
            "since_firmware": null,
            "function_id": -1,
            "type": "function"
        },
        {
            "elements": [
                [
                    "function_id",
                    "uint8",
                    1,
                    "in"
                ],
                [
                    "response_expected",
                    "bool",
                    1,
                    "out"
                ]
            ],
            "name": [
                "GetResponseExpected",
                "get_response_expected"
            ],
            "doc": [
                "af",
                {
                    "de": "\nGibt das Response-Expected-Flag f\u00fcr die Funktion mit der angegebenen Funktions\nIDs zur\u00fcck. Es ist *true* falls f\u00fcr die Funktion beim Aufruf eine Antwort\nerwartet wird, *false* andernfalls.\n\nF\u00fcr Getter-Funktionen ist diese Flag immer gesetzt und kann nicht entfernt\nwerden, da diese Funktionen immer eine Antwort senden. F\u00fcr\nKonfigurationsfunktionen f\u00fcr Callbacks ist es standardm\u00e4\u00dfig gesetzt, kann aber\nentfernt werden mittels :func:`SetResponseExpected`. F\u00fcr Setter-Funktionen ist\nes standardm\u00e4\u00dfig nicht gesetzt, kann aber gesetzt werden.\n\nWenn das Response-Expected-Flag f\u00fcr eine Setter-Funktion gesetzt ist, k\u00f6nnen\nTimeouts und andere Fehlerf\u00e4lle auch f\u00fcr Aufrufe dieser Setter-Funktion\ndetektiert werden. Das Ger\u00e4t sendet dann eine Antwort extra f\u00fcr diesen Zweck.\nWenn das Flag f\u00fcr eine Setter-Funktion nicht gesetzt ist, dann wird keine\nAntwort vom Ger\u00e4t gesendet und Fehler werden stillschweigend ignoriert, da sie\nnicht detektiert werden k\u00f6nnen.\n\nSiehe :func:`SetResponseExpected`\nf\u00fcr die Liste der verf\u00fcgbaren Funktions ID :word:`constants` f\u00fcr diese Funktion.\n",
                    "en": "\nReturns the response expected flag for the function specified by the function\nID parameter. It is *true* if the function is expected to send a response,\n*false* otherwise.\n\nFor getter functions this is enabled by default and cannot be disabled,\nbecause those functions will always send a response. For callback configuration\nfunctions it is enabled by default too, but can be disabled by\n:func:`SetResponseExpected`. For setter functions it is disabled by default\nand can be enabled.\n\nEnabling the response expected flag for a setter function allows to detect\ntimeouts and other error conditions calls of this setter as well. The\ndevice will then send a response for this purpose. If this flag is disabled for\na setter function then no response is send and errors are silently ignored,\nbecause they cannot be detected.\n\nSee :func:`SetResponseExpected`\nfor the list of function ID :word:`constants` available for this function.\n"
                }
            ],
            "is_virtual": true,
            "since_firmware": null,
            "function_id": -1,
            "type": "function"
        },
        {
            "elements": [
                [
                    "function_id",
                    "uint8",
                    1,
                    "in"
                ],
                [
                    "response_expected",
                    "bool",
                    1,
                    "in"
                ]
            ],
            "name": [
                "SetResponseExpected",
                "set_response_expected"
            ],
            "doc": [
                "af",
                {
                    "de": "\n\u00c4ndert das Response-Expected-Flag f\u00fcr die Funktion mit der angegebenen Funktion\nIDs. Diese Flag kann nur f\u00fcr Setter-Funktionen (Standardwert: *false*) und\nKonfigurationsfunktionen f\u00fcr Callbacks (Standardwert: *true*) ge\u00e4ndert werden.\nF\u00fcr Getter-Funktionen ist das Flag immer gesetzt und f\u00fcr Callbacks niemals.\n\nWenn das Response-Expected-Flag f\u00fcr eine Setter-Funktion gesetzt ist, k\u00f6nnen\nTimeouts und andere Fehlerf\u00e4lle auch f\u00fcr Aufrufe dieser Setter-Funktion\ndetektiert werden. Das Ger\u00e4t sendet dann eine Antwort extra f\u00fcr diesen Zweck.\nWenn das Flag f\u00fcr eine Setter-Funktion nicht gesetzt ist, dann wird keine\nAntwort vom Ger\u00e4t gesendet und Fehler werden stillschweigend ignoriert, da sie\nnicht detektiert werden k\u00f6nnen.\n",
                    "en": "\nChanges the response expected flag of the function specified by the\nfunction ID parameter. This flag can only be changed for setter (default value:\n*false*) and callback configuration functions (default value: *true*). For\ngetter functions it is always enabled and callbacks it is always disabled.\n\nEnabling the response expected flag for a setter function allows to detect\ntimeouts and other error conditions calls of this setter as well. The\ndevice will then send a response for this purpose. If this flag is disabled for\na setter function then no response is send and errors are silently ignored,\nbecause they cannot be detected.\n"
                }
            ],
            "is_virtual": true,
            "since_firmware": null,
            "function_id": -1,
            "type": "function"
        },
        {
            "elements": [
                [
                    "response_expected",
                    "bool",
                    1,
                    "in"
                ]
            ],
            "name": [
                "SetResponseExpectedAll",
                "set_response_expected_all"
            ],
            "doc": [
                "af",
                {
                    "de": "\n\u00c4ndert das Response-Expected-Flag f\u00fcr alle Setter-Funktionen und\nKonfigurationsfunktionen f\u00fcr Callbacks diese Ger\u00e4tes.\n",
                    "en": "\nChanges the response expected flag for all setter and callback configuration\nfunctions of this device at once.\n"
                }
            ],
            "is_virtual": true,
            "since_firmware": null,
            "function_id": -1,
            "type": "function"
        },
        {
            "elements": [
                [
                    "uid",
                    "string",
                    8,
                    "out"
                ],
                [
                    "connected_uid",
                    "string",
                    8,
                    "out"
                ],
                [
                    "position",
                    "char",
                    1,
                    "out"
                ],
                [
                    "hardware_version",
                    "uint8",
                    3,
                    "out"
                ],
                [
                    "firmware_version",
                    "uint8",
                    3,
                    "out"
                ],
                [
                    "device_identifier",
                    "uint16",
                    1,
                    "out"
                ]
            ],
            "name": [
                "GetIdentity",
                "get_identity"
            ],
            "doc": [
                "af",
                {
                    "de": "\nGibt die UID, die UID zu der das Bricklet verbunden ist, die\nPosition, die Hard- und Firmware Version sowie den Device Identifier\nzur\u00fcck.\n\nDie Position kann 'a', 'b', 'c' oder 'd' sein.\n\nEine Liste der Device Identifier Werte ist :ref:`hier <device_identifier>` zu\nfinden. |device_identifier_constant|\n",
                    "en": "\nReturns the UID, the UID where the Bricklet is connected to, \nthe position, the hardware and firmware version as well as the\ndevice identifier.\n\nThe position can be 'a', 'b', 'c' or 'd'.\n\nThe device identifier numbers can be found :ref:`here <device_identifier>`.\n|device_identifier_constant|\n"
                }
            ],
            "prototype_in_device": true,
            "since_firmware": [
                2,
                0,
                0
            ],
            "function_id": 255,
            "type": "function"
        }
    ],
    "device_identifier": 235,
    "released": true,
    "common_included": true,
    "manufacturer": "Tinkerforge",
    "api_version": [
        2,
        0,
        1
    ],
    "name": [
        "RemoteSwitch",
        "remote_switch",
        "Remote Switch"
    ]
}